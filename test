#!/usr/bin/env python3

from collections import deque

def print_board(board):
    for row in board:
        print(' '.join(row))

def get_first_empty_cell_from_bottom_to_top(column_idx: int, board):
    first_empty_cell_from_bottom_to_top = None
    for row_index in enumerate(reversed(board)):
        if board[row_index][column_idx] == '-':
            first_empty_cell_from_bottom_to_top = row_index
    return first_empty_cell_from_bottom_to_top

def main():
    board_width = 10  # or whatever width you want
    #board = deque([['-' for _ in range(board_width)]])
    board = deque([])

    tetrimino = [
        ['T', 'T', 'T'],
        ['-', 'T', '-']
    ]

    for row in (tetrimino):
        board.appendleft(row)

    tetrimino = [
        ['X', 'X'],
        ['X', 'X']
    ]

    for row in (tetrimino):
        board.appendleft(row)

    for row_index, row in enumerate(reversed(board)):
        print(row)    

    print_board(board)


if __name__ == "__main__":
    main()
